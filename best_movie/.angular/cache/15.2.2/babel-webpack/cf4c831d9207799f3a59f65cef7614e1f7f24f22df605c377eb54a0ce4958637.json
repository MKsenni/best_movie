{"ast":null,"code":"import _defineProperty from \"C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\nimport { ensureTokenIsValid, secretToken } from './secrets';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types';\n/**\n * Runtime implementation of `TrustedScriptURL` in browsers that don't support\n * it.\n */\nclass ResourceUrlImpl {\n  constructor(url, token) {\n    _defineProperty(this, \"privateDoNotAccessOrElseWrappedResourceUrl\", void 0);\n    if (process.env.NODE_ENV !== 'production') {\n      ensureTokenIsValid(token);\n    }\n    this.privateDoNotAccessOrElseWrappedResourceUrl = url;\n  }\n  toString() {\n    return this.privateDoNotAccessOrElseWrappedResourceUrl.toString();\n  }\n}\nconst GlobalTrustedScriptURL = typeof window !== undefined ? window.TrustedScriptURL : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const TrustedResourceUrl = GlobalTrustedScriptURL ?? ResourceUrlImpl;\n/**\n * Builds a new `TrustedResourceUrl` from the given string, without\n * enforcing safety guarantees. It may cause side effects by creating a Trusted\n * Types policy. This shouldn't be exposed to application developers, and must\n * only be used as a step towards safe builders or safe constants.\n */\nexport function createResourceUrl(url) {\n  /** @noinline */\n  const noinlineUrl = url;\n  const trustedScriptURL = getTrustedTypesPolicy()?.createScriptURL(noinlineUrl);\n  return trustedScriptURL ?? new ResourceUrlImpl(noinlineUrl, secretToken);\n}\n/**\n * Checks if the given value is a `TrustedResourceUrl` instance.\n */\nexport function isResourceUrl(value) {\n  return value instanceof TrustedResourceUrl;\n}\n/**\n * Returns the value of the passed `TrustedResourceUrl` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedScriptURL` or a string if Trusted Types are\n * disabled.\n */\nexport function unwrapResourceUrl(value) {\n  if (getTrustedTypes()?.isScriptURL(value)) {\n    return value;\n  } else if (value instanceof ResourceUrlImpl) {\n    return value.privateDoNotAccessOrElseWrappedResourceUrl;\n  } else {\n    let message = '';\n    if (process.env.NODE_ENV !== 'production') {\n      message = 'Unexpected type when unwrapping TrustedResourceUrl';\n    }\n    throw new Error(message);\n  }\n}","map":{"version":3,"names":["ensureTokenIsValid","secretToken","getTrustedTypes","getTrustedTypesPolicy","ResourceUrlImpl","constructor","url","token","process","env","NODE_ENV","privateDoNotAccessOrElseWrappedResourceUrl","toString","GlobalTrustedScriptURL","window","undefined","TrustedScriptURL","TrustedResourceUrl","createResourceUrl","noinlineUrl","trustedScriptURL","createScriptURL","isResourceUrl","value","unwrapResourceUrl","isScriptURL","message","Error"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/safevalues/internals/resource_url_impl.mjs"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\nimport { ensureTokenIsValid, secretToken } from './secrets';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types';\n/**\n * Runtime implementation of `TrustedScriptURL` in browsers that don't support\n * it.\n */\nclass ResourceUrlImpl {\n    privateDoNotAccessOrElseWrappedResourceUrl;\n    constructor(url, token) {\n        if (process.env.NODE_ENV !== 'production') {\n            ensureTokenIsValid(token);\n        }\n        this.privateDoNotAccessOrElseWrappedResourceUrl = url;\n    }\n    toString() {\n        return this.privateDoNotAccessOrElseWrappedResourceUrl.toString();\n    }\n}\nconst GlobalTrustedScriptURL = (typeof window !== undefined) ? window.TrustedScriptURL : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const TrustedResourceUrl = (GlobalTrustedScriptURL ?? ResourceUrlImpl);\n/**\n * Builds a new `TrustedResourceUrl` from the given string, without\n * enforcing safety guarantees. It may cause side effects by creating a Trusted\n * Types policy. This shouldn't be exposed to application developers, and must\n * only be used as a step towards safe builders or safe constants.\n */\nexport function createResourceUrl(url) {\n    /** @noinline */\n    const noinlineUrl = url;\n    const trustedScriptURL = getTrustedTypesPolicy()?.createScriptURL(noinlineUrl);\n    return (trustedScriptURL ?? new ResourceUrlImpl(noinlineUrl, secretToken));\n}\n/**\n * Checks if the given value is a `TrustedResourceUrl` instance.\n */\nexport function isResourceUrl(value) {\n    return value instanceof TrustedResourceUrl;\n}\n/**\n * Returns the value of the passed `TrustedResourceUrl` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedScriptURL` or a string if Trusted Types are\n * disabled.\n */\nexport function unwrapResourceUrl(value) {\n    if (getTrustedTypes()?.isScriptURL(value)) {\n        return value;\n    }\n    else if (value instanceof ResourceUrlImpl) {\n        return value.privateDoNotAccessOrElseWrappedResourceUrl;\n    }\n    else {\n        let message = '';\n        if (process.env.NODE_ENV !== 'production') {\n            message = 'Unexpected type when unwrapping TrustedResourceUrl';\n        }\n        throw new Error(message);\n    }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,OAAO,oBAAoB;AAC3B,SAASA,kBAAkB,EAAEC,WAAW,QAAQ,WAAW;AAC3D,SAASC,eAAe,EAAEC,qBAAqB,QAAQ,iBAAiB;AACxE;AACA;AACA;AACA;AACA,MAAMC,eAAe,CAAC;EAElBC,WAAW,CAACC,GAAG,EAAEC,KAAK,EAAE;IAAA;IACpB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCV,kBAAkB,CAACO,KAAK,CAAC;IAC7B;IACA,IAAI,CAACI,0CAA0C,GAAGL,GAAG;EACzD;EACAM,QAAQ,GAAG;IACP,OAAO,IAAI,CAACD,0CAA0C,CAACC,QAAQ,EAAE;EACrE;AACJ;AACA,MAAMC,sBAAsB,GAAI,OAAOC,MAAM,KAAKC,SAAS,GAAID,MAAM,CAACE,gBAAgB,GAAGD,SAAS;AAClG;AACA;AACA;AACA,OAAO,MAAME,kBAAkB,GAAIJ,sBAAsB,IAAIT,eAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASc,iBAAiB,CAACZ,GAAG,EAAE;EACnC;EACA,MAAMa,WAAW,GAAGb,GAAG;EACvB,MAAMc,gBAAgB,GAAGjB,qBAAqB,EAAE,EAAEkB,eAAe,CAACF,WAAW,CAAC;EAC9E,OAAQC,gBAAgB,IAAI,IAAIhB,eAAe,CAACe,WAAW,EAAElB,WAAW,CAAC;AAC7E;AACA;AACA;AACA;AACA,OAAO,SAASqB,aAAa,CAACC,KAAK,EAAE;EACjC,OAAOA,KAAK,YAAYN,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASO,iBAAiB,CAACD,KAAK,EAAE;EACrC,IAAIrB,eAAe,EAAE,EAAEuB,WAAW,CAACF,KAAK,CAAC,EAAE;IACvC,OAAOA,KAAK;EAChB,CAAC,MACI,IAAIA,KAAK,YAAYnB,eAAe,EAAE;IACvC,OAAOmB,KAAK,CAACZ,0CAA0C;EAC3D,CAAC,MACI;IACD,IAAIe,OAAO,GAAG,EAAE;IAChB,IAAIlB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCgB,OAAO,GAAG,oDAAoD;IAClE;IACA,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC;EAC5B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}