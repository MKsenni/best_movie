{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { unwrapScript } from '../../internals/script_impl';\n/**\n * Evaluates a SafeScript value in the given scope using eval.\n *\n * Strongly consider avoiding this, as eval blocks CSP adoption and does not\n * benefit from compiler optimizations.\n */\nexport function globalEval(win, script) {\n  const trustedScript = unwrapScript(script);\n  let result = win.eval(trustedScript);\n  if (result === trustedScript) {\n    // https://crbug.com/1024786 manifesting in workers.\n    result = win.eval(trustedScript.toString());\n  }\n  return result;\n}","map":{"version":3,"names":["unwrapScript","globalEval","win","script","trustedScript","result","eval","toString"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/safevalues/dom/globals/global.mjs"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { unwrapScript } from '../../internals/script_impl';\n/**\n * Evaluates a SafeScript value in the given scope using eval.\n *\n * Strongly consider avoiding this, as eval blocks CSP adoption and does not\n * benefit from compiler optimizations.\n */\nexport function globalEval(win, script) {\n    const trustedScript = unwrapScript(script);\n    let result = win.eval(trustedScript);\n    if (result === trustedScript) {\n        // https://crbug.com/1024786 manifesting in workers.\n        result = win.eval(trustedScript.toString());\n    }\n    return result;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAU,CAACC,GAAG,EAAEC,MAAM,EAAE;EACpC,MAAMC,aAAa,GAAGJ,YAAY,CAACG,MAAM,CAAC;EAC1C,IAAIE,MAAM,GAAGH,GAAG,CAACI,IAAI,CAACF,aAAa,CAAC;EACpC,IAAIC,MAAM,KAAKD,aAAa,EAAE;IAC1B;IACAC,MAAM,GAAGH,GAAG,CAACI,IAAI,CAACF,aAAa,CAACG,QAAQ,EAAE,CAAC;EAC/C;EACA,OAAOF,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}