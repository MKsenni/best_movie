{"ast":null,"code":"import _defineProperty from \"C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\n/* g3_import_pure from './pure' */\nimport { ensureTokenIsValid, secretToken } from './secrets';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types';\n/**\n * Runtime implementation of `TrustedHTML` in browsers that don't support it.\n */\nclass HtmlImpl {\n  constructor(html, token) {\n    _defineProperty(this, \"privateDoNotAccessOrElseWrappedHtml\", void 0);\n    if (process.env.NODE_ENV !== 'production') {\n      ensureTokenIsValid(token);\n    }\n    this.privateDoNotAccessOrElseWrappedHtml = html;\n  }\n  toString() {\n    return this.privateDoNotAccessOrElseWrappedHtml.toString();\n  }\n}\nfunction createHtmlInternal(html, trusted) {\n  return trusted ?? new HtmlImpl(html, secretToken);\n}\nconst GlobalTrustedHTML = typeof window !== undefined ? window.TrustedHTML : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const SafeHtml = GlobalTrustedHTML ?? HtmlImpl;\n/**\n * Builds a new `SafeHtml` from the given string, without enforcing safety\n * guarantees. It may cause side effects by creating a Trusted Types policy.\n * This shouldn't be exposed to application developers, and must only be used as\n * a step towards safe builders or safe constants.\n */\nexport function createHtml(html) {\n  /** @noinline */\n  const noinlineHtml = html;\n  return createHtmlInternal(noinlineHtml, getTrustedTypesPolicy()?.createHTML(noinlineHtml));\n}\n/**\n * An empty `SafeHtml` constant.\n * Unlike the function above, using this will not create a policy.\n */\nexport const EMPTY_HTML = /* #__PURE__ */(() => createHtmlInternal('', getTrustedTypes()?.emptyHTML))();\n/**\n * Checks if the given value is a `SafeHtml` instance.\n */\nexport function isHtml(value) {\n  return value instanceof SafeHtml;\n}\n/**\n * Returns the value of the passed `SafeHtml` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedHTML` or a string if Trusted Types are disabled.\n */\nexport function unwrapHtml(value) {\n  if (getTrustedTypes()?.isHTML(value)) {\n    return value;\n  } else if (value instanceof HtmlImpl) {\n    return value.privateDoNotAccessOrElseWrappedHtml;\n  } else {\n    let message = '';\n    if (process.env.NODE_ENV !== 'production') {\n      message = 'Unexpected type when unwrapping SafeHtml';\n    }\n    throw new Error(message);\n  }\n}","map":{"version":3,"names":["ensureTokenIsValid","secretToken","getTrustedTypes","getTrustedTypesPolicy","HtmlImpl","constructor","html","token","process","env","NODE_ENV","privateDoNotAccessOrElseWrappedHtml","toString","createHtmlInternal","trusted","GlobalTrustedHTML","window","undefined","TrustedHTML","SafeHtml","createHtml","noinlineHtml","createHTML","EMPTY_HTML","emptyHTML","isHtml","value","unwrapHtml","isHTML","message","Error"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/safevalues/internals/html_impl.mjs"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\n/* g3_import_pure from './pure' */\nimport { ensureTokenIsValid, secretToken } from './secrets';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types';\n/**\n * Runtime implementation of `TrustedHTML` in browsers that don't support it.\n */\nclass HtmlImpl {\n    privateDoNotAccessOrElseWrappedHtml;\n    constructor(html, token) {\n        if (process.env.NODE_ENV !== 'production') {\n            ensureTokenIsValid(token);\n        }\n        this.privateDoNotAccessOrElseWrappedHtml = html;\n    }\n    toString() {\n        return this.privateDoNotAccessOrElseWrappedHtml.toString();\n    }\n}\nfunction createHtmlInternal(html, trusted) {\n    return (trusted ?? new HtmlImpl(html, secretToken));\n}\nconst GlobalTrustedHTML = (typeof window !== undefined) ? window.TrustedHTML : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const SafeHtml = (GlobalTrustedHTML ?? HtmlImpl);\n/**\n * Builds a new `SafeHtml` from the given string, without enforcing safety\n * guarantees. It may cause side effects by creating a Trusted Types policy.\n * This shouldn't be exposed to application developers, and must only be used as\n * a step towards safe builders or safe constants.\n */\nexport function createHtml(html) {\n    /** @noinline */\n    const noinlineHtml = html;\n    return createHtmlInternal(noinlineHtml, getTrustedTypesPolicy()?.createHTML(noinlineHtml));\n}\n/**\n * An empty `SafeHtml` constant.\n * Unlike the function above, using this will not create a policy.\n */\nexport const EMPTY_HTML = \n/* #__PURE__ */ (() => createHtmlInternal('', getTrustedTypes()?.emptyHTML))();\n/**\n * Checks if the given value is a `SafeHtml` instance.\n */\nexport function isHtml(value) {\n    return value instanceof SafeHtml;\n}\n/**\n * Returns the value of the passed `SafeHtml` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedHTML` or a string if Trusted Types are disabled.\n */\nexport function unwrapHtml(value) {\n    if (getTrustedTypes()?.isHTML(value)) {\n        return value;\n    }\n    else if (value instanceof HtmlImpl) {\n        return value.privateDoNotAccessOrElseWrappedHtml;\n    }\n    else {\n        let message = '';\n        if (process.env.NODE_ENV !== 'production') {\n            message = 'Unexpected type when unwrapping SafeHtml';\n        }\n        throw new Error(message);\n    }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,OAAO,oBAAoB;AAC3B;AACA,SAASA,kBAAkB,EAAEC,WAAW,QAAQ,WAAW;AAC3D,SAASC,eAAe,EAAEC,qBAAqB,QAAQ,iBAAiB;AACxE;AACA;AACA;AACA,MAAMC,QAAQ,CAAC;EAEXC,WAAW,CAACC,IAAI,EAAEC,KAAK,EAAE;IAAA;IACrB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCV,kBAAkB,CAACO,KAAK,CAAC;IAC7B;IACA,IAAI,CAACI,mCAAmC,GAAGL,IAAI;EACnD;EACAM,QAAQ,GAAG;IACP,OAAO,IAAI,CAACD,mCAAmC,CAACC,QAAQ,EAAE;EAC9D;AACJ;AACA,SAASC,kBAAkB,CAACP,IAAI,EAAEQ,OAAO,EAAE;EACvC,OAAQA,OAAO,IAAI,IAAIV,QAAQ,CAACE,IAAI,EAAEL,WAAW,CAAC;AACtD;AACA,MAAMc,iBAAiB,GAAI,OAAOC,MAAM,KAAKC,SAAS,GAAID,MAAM,CAACE,WAAW,GAAGD,SAAS;AACxF;AACA;AACA;AACA,OAAO,MAAME,QAAQ,GAAIJ,iBAAiB,IAAIX,QAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASgB,UAAU,CAACd,IAAI,EAAE;EAC7B;EACA,MAAMe,YAAY,GAAGf,IAAI;EACzB,OAAOO,kBAAkB,CAACQ,YAAY,EAAElB,qBAAqB,EAAE,EAAEmB,UAAU,CAACD,YAAY,CAAC,CAAC;AAC9F;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,UAAU,GACvB,eAAgB,CAAC,MAAMV,kBAAkB,CAAC,EAAE,EAAEX,eAAe,EAAE,EAAEsB,SAAS,CAAC,GAAG;AAC9E;AACA;AACA;AACA,OAAO,SAASC,MAAM,CAACC,KAAK,EAAE;EAC1B,OAAOA,KAAK,YAAYP,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASQ,UAAU,CAACD,KAAK,EAAE;EAC9B,IAAIxB,eAAe,EAAE,EAAE0B,MAAM,CAACF,KAAK,CAAC,EAAE;IAClC,OAAOA,KAAK;EAChB,CAAC,MACI,IAAIA,KAAK,YAAYtB,QAAQ,EAAE;IAChC,OAAOsB,KAAK,CAACf,mCAAmC;EACpD,CAAC,MACI;IACD,IAAIkB,OAAO,GAAG,EAAE;IAChB,IAAIrB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCmB,OAAO,GAAG,0CAA0C;IACxD;IACA,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC;EAC5B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}