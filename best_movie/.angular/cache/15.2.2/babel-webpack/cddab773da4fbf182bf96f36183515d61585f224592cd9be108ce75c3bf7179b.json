{"ast":null,"code":"import _defineProperty from \"C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\nimport { ensureTokenIsValid, secretToken } from './secrets';\n/**\n * A complete CSS style sheet, safe to use in style contexts in an HTML document\n * or DOM APIs.\n */\nexport class SafeStyleSheet {\n  constructor() {\n    // @ts-ignore: error TS6133: 'brand' is declared but its value is never read.\n    _defineProperty(this, \"brand\", void 0);\n  } // To prevent structural typing.\n}\n/** Implementation for `SafeStyleSheet` */\nclass StyleSheetImpl extends SafeStyleSheet {\n  constructor(styleSheet, token) {\n    super();\n    _defineProperty(this, \"privateDoNotAccessOrElseWrappedStyleSheet\", void 0);\n    if (process.env.NODE_ENV !== 'production') {\n      ensureTokenIsValid(token);\n    }\n    this.privateDoNotAccessOrElseWrappedStyleSheet = styleSheet;\n  }\n  toString() {\n    return this.privateDoNotAccessOrElseWrappedStyleSheet;\n  }\n}\n/**\n * Builds a new `SafeStyleSheet` from the given string, without enforcing\n * safety guarantees. This shouldn't be exposed to application developers, and\n * must only be used as a step towards safe builders or safe constants.\n */\nexport function createStyleSheet(styleSheet) {\n  return new StyleSheetImpl(styleSheet, secretToken);\n}\n/**\n * Checks if the given value is a `SafeStyleSheet` instance.\n */\nexport function isStyleSheet(value) {\n  return value instanceof StyleSheetImpl;\n}\n/**\n * Returns the string value of the passed `SafeStyleSheet` object while\n * ensuring it has the correct type.\n */\nexport function unwrapStyleSheet(value) {\n  if (value instanceof StyleSheetImpl) {\n    return value.privateDoNotAccessOrElseWrappedStyleSheet;\n  } else {\n    let message = '';\n    if (process.env.NODE_ENV !== 'production') {\n      message = 'Unexpected type when unwrapping SafeStyleSheet';\n    }\n    throw new Error(message);\n  }\n}","map":{"version":3,"names":["ensureTokenIsValid","secretToken","SafeStyleSheet","StyleSheetImpl","constructor","styleSheet","token","process","env","NODE_ENV","privateDoNotAccessOrElseWrappedStyleSheet","toString","createStyleSheet","isStyleSheet","value","unwrapStyleSheet","message","Error"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/safevalues/internals/style_sheet_impl.mjs"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\nimport { ensureTokenIsValid, secretToken } from './secrets';\n/**\n * A complete CSS style sheet, safe to use in style contexts in an HTML document\n * or DOM APIs.\n */\nexport class SafeStyleSheet {\n    // @ts-ignore: error TS6133: 'brand' is declared but its value is never read.\n    brand; // To prevent structural typing.\n}\n/** Implementation for `SafeStyleSheet` */\nclass StyleSheetImpl extends SafeStyleSheet {\n    privateDoNotAccessOrElseWrappedStyleSheet;\n    constructor(styleSheet, token) {\n        super();\n        if (process.env.NODE_ENV !== 'production') {\n            ensureTokenIsValid(token);\n        }\n        this.privateDoNotAccessOrElseWrappedStyleSheet = styleSheet;\n    }\n    toString() {\n        return this.privateDoNotAccessOrElseWrappedStyleSheet;\n    }\n}\n/**\n * Builds a new `SafeStyleSheet` from the given string, without enforcing\n * safety guarantees. This shouldn't be exposed to application developers, and\n * must only be used as a step towards safe builders or safe constants.\n */\nexport function createStyleSheet(styleSheet) {\n    return new StyleSheetImpl(styleSheet, secretToken);\n}\n/**\n * Checks if the given value is a `SafeStyleSheet` instance.\n */\nexport function isStyleSheet(value) {\n    return value instanceof StyleSheetImpl;\n}\n/**\n * Returns the string value of the passed `SafeStyleSheet` object while\n * ensuring it has the correct type.\n */\nexport function unwrapStyleSheet(value) {\n    if (value instanceof StyleSheetImpl) {\n        return value.privateDoNotAccessOrElseWrappedStyleSheet;\n    }\n    else {\n        let message = '';\n        if (process.env.NODE_ENV !== 'production') {\n            message = 'Unexpected type when unwrapping SafeStyleSheet';\n        }\n        throw new Error(message);\n    }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,OAAO,oBAAoB;AAC3B,SAASA,kBAAkB,EAAEC,WAAW,QAAQ,WAAW;AAC3D;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,CAAC;EAAA;IACxB;IAAA;EAAA,EACO;AACX;AACA;AACA,MAAMC,cAAc,SAASD,cAAc,CAAC;EAExCE,WAAW,CAACC,UAAU,EAAEC,KAAK,EAAE;IAC3B,KAAK,EAAE;IAAC;IACR,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCT,kBAAkB,CAACM,KAAK,CAAC;IAC7B;IACA,IAAI,CAACI,yCAAyC,GAAGL,UAAU;EAC/D;EACAM,QAAQ,GAAG;IACP,OAAO,IAAI,CAACD,yCAAyC;EACzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,gBAAgB,CAACP,UAAU,EAAE;EACzC,OAAO,IAAIF,cAAc,CAACE,UAAU,EAAEJ,WAAW,CAAC;AACtD;AACA;AACA;AACA;AACA,OAAO,SAASY,YAAY,CAACC,KAAK,EAAE;EAChC,OAAOA,KAAK,YAAYX,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO,SAASY,gBAAgB,CAACD,KAAK,EAAE;EACpC,IAAIA,KAAK,YAAYX,cAAc,EAAE;IACjC,OAAOW,KAAK,CAACJ,yCAAyC;EAC1D,CAAC,MACI;IACD,IAAIM,OAAO,GAAG,EAAE;IAChB,IAAIT,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCO,OAAO,GAAG,gDAAgD;IAC9D;IACA,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC;EAC5B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}