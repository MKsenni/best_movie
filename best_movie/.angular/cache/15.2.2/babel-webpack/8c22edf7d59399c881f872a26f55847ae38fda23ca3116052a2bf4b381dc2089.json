{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { unwrapUrlOrSanitize } from '../../builders/url_sanitizer';\nimport { TrustedResourceUrl, unwrapResourceUrl } from '../../internals/resource_url_impl';\nconst SAFE_URL_REL_VALUES = ['alternate', 'author', 'bookmark', 'canonical', 'cite', 'help', 'icon', 'license', 'next', 'prefetch', 'dns-prefetch', 'prerender', 'preconnect', 'preload', 'prev', 'search', 'subresource'];\nexport function setHrefAndRel(link, url, rel) {\n  if (url instanceof TrustedResourceUrl) {\n    link.href = unwrapResourceUrl(url).toString();\n  } else {\n    if (SAFE_URL_REL_VALUES.indexOf(rel) === -1) {\n      throw new Error(`TrustedResourceUrl href attribute required with rel=\"${rel}\"`);\n    }\n    const sanitizedUrl = unwrapUrlOrSanitize(url);\n    if (sanitizedUrl === undefined) {\n      return;\n    }\n    link.href = sanitizedUrl;\n  }\n  link.rel = rel;\n}","map":{"version":3,"names":["unwrapUrlOrSanitize","TrustedResourceUrl","unwrapResourceUrl","SAFE_URL_REL_VALUES","setHrefAndRel","link","url","rel","href","toString","indexOf","Error","sanitizedUrl","undefined"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/safevalues/dom/elements/link.mjs"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { unwrapUrlOrSanitize } from '../../builders/url_sanitizer';\nimport { TrustedResourceUrl, unwrapResourceUrl } from '../../internals/resource_url_impl';\nconst SAFE_URL_REL_VALUES = [\n    'alternate',\n    'author',\n    'bookmark',\n    'canonical',\n    'cite',\n    'help',\n    'icon',\n    'license',\n    'next',\n    'prefetch',\n    'dns-prefetch',\n    'prerender',\n    'preconnect',\n    'preload',\n    'prev',\n    'search',\n    'subresource',\n];\nexport function setHrefAndRel(link, url, rel) {\n    if (url instanceof TrustedResourceUrl) {\n        link.href = unwrapResourceUrl(url).toString();\n    }\n    else {\n        if (SAFE_URL_REL_VALUES.indexOf(rel) === -1) {\n            throw new Error(`TrustedResourceUrl href attribute required with rel=\"${rel}\"`);\n        }\n        const sanitizedUrl = unwrapUrlOrSanitize(url);\n        if (sanitizedUrl === undefined) {\n            return;\n        }\n        link.href = sanitizedUrl;\n    }\n    link.rel = rel;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,QAAQ,8BAA8B;AAClE,SAASC,kBAAkB,EAAEC,iBAAiB,QAAQ,mCAAmC;AACzF,MAAMC,mBAAmB,GAAG,CACxB,WAAW,EACX,QAAQ,EACR,UAAU,EACV,WAAW,EACX,MAAM,EACN,MAAM,EACN,MAAM,EACN,SAAS,EACT,MAAM,EACN,UAAU,EACV,cAAc,EACd,WAAW,EACX,YAAY,EACZ,SAAS,EACT,MAAM,EACN,QAAQ,EACR,aAAa,CAChB;AACD,OAAO,SAASC,aAAa,CAACC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAC1C,IAAID,GAAG,YAAYL,kBAAkB,EAAE;IACnCI,IAAI,CAACG,IAAI,GAAGN,iBAAiB,CAACI,GAAG,CAAC,CAACG,QAAQ,EAAE;EACjD,CAAC,MACI;IACD,IAAIN,mBAAmB,CAACO,OAAO,CAACH,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MACzC,MAAM,IAAII,KAAK,CAAE,wDAAuDJ,GAAI,GAAE,CAAC;IACnF;IACA,MAAMK,YAAY,GAAGZ,mBAAmB,CAACM,GAAG,CAAC;IAC7C,IAAIM,YAAY,KAAKC,SAAS,EAAE;MAC5B;IACJ;IACAR,IAAI,CAACG,IAAI,GAAGI,YAAY;EAC5B;EACAP,IAAI,CAACE,GAAG,GAAGA,GAAG;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}