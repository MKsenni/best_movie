{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCIconButtonToggleFoundation } from './foundation';\nvar strings = MDCIconButtonToggleFoundation.strings;\n/** MDC Icon Button Toggle */\nvar MDCIconButtonToggle = /** @class */function (_super) {\n  __extends(MDCIconButtonToggle, _super);\n  function MDCIconButtonToggle() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.rippleComponent = _this.createRipple();\n    return _this;\n  }\n  MDCIconButtonToggle.attachTo = function (root) {\n    return new MDCIconButtonToggle(root);\n  };\n  MDCIconButtonToggle.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n    this.handleClick = function () {\n      _this.foundation.handleClick();\n    };\n    this.listen('click', this.handleClick);\n  };\n  MDCIconButtonToggle.prototype.destroy = function () {\n    this.unlisten('click', this.handleClick);\n    this.ripple.destroy();\n    _super.prototype.destroy.call(this);\n  };\n  MDCIconButtonToggle.prototype.getDefaultFoundation = function () {\n    var _this = this;\n    // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n    var adapter = {\n      addClass: function (className) {\n        _this.root.classList.add(className);\n      },\n      hasClass: function (className) {\n        return _this.root.classList.contains(className);\n      },\n      notifyChange: function (evtData) {\n        _this.emit(strings.CHANGE_EVENT, evtData);\n      },\n      removeClass: function (className) {\n        _this.root.classList.remove(className);\n      },\n      getAttr: function (attrName) {\n        return _this.root.getAttribute(attrName);\n      },\n      setAttr: function (attrName, attrValue) {\n        _this.safeSetAttribute(_this.root, attrName, attrValue);\n      }\n    };\n    return new MDCIconButtonToggleFoundation(adapter);\n  };\n  Object.defineProperty(MDCIconButtonToggle.prototype, \"ripple\", {\n    get: function () {\n      return this.rippleComponent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCIconButtonToggle.prototype, \"on\", {\n    get: function () {\n      return this.foundation.isOn();\n    },\n    set: function (isOn) {\n      this.foundation.toggle(isOn);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MDCIconButtonToggle.prototype.createRipple = function () {\n    var ripple = new MDCRipple(this.root);\n    ripple.unbounded = true;\n    return ripple;\n  };\n  return MDCIconButtonToggle;\n}(MDCComponent);\nexport { MDCIconButtonToggle };","map":{"version":3,"names":["__extends","MDCComponent","MDCRipple","MDCIconButtonToggleFoundation","strings","MDCIconButtonToggle","_super","_this","apply","arguments","rippleComponent","createRipple","attachTo","root","prototype","initialSyncWithDOM","handleClick","foundation","listen","destroy","unlisten","ripple","call","getDefaultFoundation","adapter","addClass","className","classList","add","hasClass","contains","notifyChange","evtData","emit","CHANGE_EVENT","removeClass","remove","getAttr","attrName","getAttribute","setAttr","attrValue","safeSetAttribute","Object","defineProperty","get","enumerable","configurable","isOn","set","toggle","unbounded"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/@material/icon-button/component.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCIconButtonToggleFoundation } from './foundation';\nvar strings = MDCIconButtonToggleFoundation.strings;\n/** MDC Icon Button Toggle */\nvar MDCIconButtonToggle = /** @class */ (function (_super) {\n    __extends(MDCIconButtonToggle, _super);\n    function MDCIconButtonToggle() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rippleComponent = _this.createRipple();\n        return _this;\n    }\n    MDCIconButtonToggle.attachTo = function (root) {\n        return new MDCIconButtonToggle(root);\n    };\n    MDCIconButtonToggle.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleClick = function () {\n            _this.foundation.handleClick();\n        };\n        this.listen('click', this.handleClick);\n    };\n    MDCIconButtonToggle.prototype.destroy = function () {\n        this.unlisten('click', this.handleClick);\n        this.ripple.destroy();\n        _super.prototype.destroy.call(this);\n    };\n    MDCIconButtonToggle.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) {\n                _this.root.classList.add(className);\n            },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            notifyChange: function (evtData) {\n                _this.emit(strings.CHANGE_EVENT, evtData);\n            },\n            removeClass: function (className) {\n                _this.root.classList.remove(className);\n            },\n            getAttr: function (attrName) { return _this.root.getAttribute(attrName); },\n            setAttr: function (attrName, attrValue) {\n                _this.safeSetAttribute(_this.root, attrName, attrValue);\n            },\n        };\n        return new MDCIconButtonToggleFoundation(adapter);\n    };\n    Object.defineProperty(MDCIconButtonToggle.prototype, \"ripple\", {\n        get: function () {\n            return this.rippleComponent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCIconButtonToggle.prototype, \"on\", {\n        get: function () {\n            return this.foundation.isOn();\n        },\n        set: function (isOn) {\n            this.foundation.toggle(isOn);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCIconButtonToggle.prototype.createRipple = function () {\n        var ripple = new MDCRipple(this.root);\n        ripple.unbounded = true;\n        return ripple;\n    };\n    return MDCIconButtonToggle;\n}(MDCComponent));\nexport { MDCIconButtonToggle };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}