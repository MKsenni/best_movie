{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { unwrapResourceUrl } from '../../internals/resource_url_impl';\nimport { unwrapScript } from '../../internals/script_impl';\n/** Returns CSP nonce, if set for any script tag. */\nfunction getScriptNonceFromWindow(win) {\n  const doc = win.document;\n  // document.querySelector can be undefined in non-browser environments.\n  const script = doc.querySelector?.('script[nonce]');\n  if (script) {\n    // Try to get the nonce from the IDL property first, because browsers that\n    // implement additional nonce protection features (currently only Chrome) to\n    // prevent nonce stealing via CSS do not expose the nonce via attributes.\n    // See https://github.com/whatwg/html/issues/2369\n    return script['nonce'] || script.getAttribute('nonce') || '';\n  }\n  return '';\n}\n/** Propagates CSP nonce to dynamically created scripts. */\nfunction setNonceForScriptElement(script) {\n  const win = script.ownerDocument && script.ownerDocument.defaultView;\n  const nonce = getScriptNonceFromWindow(win || window);\n  if (nonce) {\n    script.setAttribute('nonce', nonce);\n  }\n}\n/** Sets textContent from the given SafeScript. */\nexport function setTextContent(script, v) {\n  script.textContent = unwrapScript(v);\n  setNonceForScriptElement(script);\n}\n/** Sets the Src attribute using a TrustedResourceUrl */\nexport function setSrc(script, v) {\n  script.src = unwrapResourceUrl(v);\n  setNonceForScriptElement(script);\n}","map":{"version":3,"names":["unwrapResourceUrl","unwrapScript","getScriptNonceFromWindow","win","doc","document","script","querySelector","getAttribute","setNonceForScriptElement","ownerDocument","defaultView","nonce","window","setAttribute","setTextContent","v","textContent","setSrc","src"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/safevalues/dom/elements/script.mjs"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { unwrapResourceUrl } from '../../internals/resource_url_impl';\nimport { unwrapScript } from '../../internals/script_impl';\n/** Returns CSP nonce, if set for any script tag. */\nfunction getScriptNonceFromWindow(win) {\n    const doc = win.document;\n    // document.querySelector can be undefined in non-browser environments.\n    const script = doc.querySelector?.('script[nonce]');\n    if (script) {\n        // Try to get the nonce from the IDL property first, because browsers that\n        // implement additional nonce protection features (currently only Chrome) to\n        // prevent nonce stealing via CSS do not expose the nonce via attributes.\n        // See https://github.com/whatwg/html/issues/2369\n        return script['nonce'] || script.getAttribute('nonce') || '';\n    }\n    return '';\n}\n/** Propagates CSP nonce to dynamically created scripts. */\nfunction setNonceForScriptElement(script) {\n    const win = script.ownerDocument && script.ownerDocument.defaultView;\n    const nonce = getScriptNonceFromWindow(win || window);\n    if (nonce) {\n        script.setAttribute('nonce', nonce);\n    }\n}\n/** Sets textContent from the given SafeScript. */\nexport function setTextContent(script, v) {\n    script.textContent = unwrapScript(v);\n    setNonceForScriptElement(script);\n}\n/** Sets the Src attribute using a TrustedResourceUrl */\nexport function setSrc(script, v) {\n    script.src = unwrapResourceUrl(v);\n    setNonceForScriptElement(script);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,iBAAiB,QAAQ,mCAAmC;AACrE,SAASC,YAAY,QAAQ,6BAA6B;AAC1D;AACA,SAASC,wBAAwB,CAACC,GAAG,EAAE;EACnC,MAAMC,GAAG,GAAGD,GAAG,CAACE,QAAQ;EACxB;EACA,MAAMC,MAAM,GAAGF,GAAG,CAACG,aAAa,GAAG,eAAe,CAAC;EACnD,IAAID,MAAM,EAAE;IACR;IACA;IACA;IACA;IACA,OAAOA,MAAM,CAAC,OAAO,CAAC,IAAIA,MAAM,CAACE,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE;EAChE;EACA,OAAO,EAAE;AACb;AACA;AACA,SAASC,wBAAwB,CAACH,MAAM,EAAE;EACtC,MAAMH,GAAG,GAAGG,MAAM,CAACI,aAAa,IAAIJ,MAAM,CAACI,aAAa,CAACC,WAAW;EACpE,MAAMC,KAAK,GAAGV,wBAAwB,CAACC,GAAG,IAAIU,MAAM,CAAC;EACrD,IAAID,KAAK,EAAE;IACPN,MAAM,CAACQ,YAAY,CAAC,OAAO,EAAEF,KAAK,CAAC;EACvC;AACJ;AACA;AACA,OAAO,SAASG,cAAc,CAACT,MAAM,EAAEU,CAAC,EAAE;EACtCV,MAAM,CAACW,WAAW,GAAGhB,YAAY,CAACe,CAAC,CAAC;EACpCP,wBAAwB,CAACH,MAAM,CAAC;AACpC;AACA;AACA,OAAO,SAASY,MAAM,CAACZ,MAAM,EAAEU,CAAC,EAAE;EAC9BV,MAAM,CAACa,GAAG,GAAGnB,iBAAiB,CAACgB,CAAC,CAAC;EACjCP,wBAAwB,CAACH,MAAM,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}