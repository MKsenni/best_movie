{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\nimport { assertIsTemplateObject } from '../internals/string_literal';\nimport { createStyleSheet, unwrapStyleSheet } from '../internals/style_sheet_impl';\n/**\n * Creates a SafeStyleSheet object from a template literal (without any\n * embedded expressions).\n *\n * This function is a template literal tag function. It should be called with\n * a template literal that does not contain any expressions. For example,\n *                         safeStyleSheet`foo`;\n * The argument must not have any < or > characters in it. This is so that\n * SafeStyleSheet's contract is preserved, allowing the SafeStyleSheet to\n * correctly be interpreted as a sequence of CSS declarations and without\n * affecting the syntactic structure of any surrounding CSS and HTML.\n *\n * @param templateObj This contains the literal part of the template literal.\n */\nexport function safeStyleSheet(templateObj) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertIsTemplateObject(templateObj, false, 'safeStyleSheet is a template literal tag ' + 'function that only accepts template literals without ' + 'expressions. For example, safeStyleSheet`foo`;');\n  }\n  const styleSheet = templateObj[0];\n  if (process.env.NODE_ENV !== 'production') {\n    if (/[<>]/.test(styleSheet)) {\n      throw new Error('Forbidden characters in styleSheet string: ' + styleSheet);\n    }\n  }\n  return createStyleSheet(styleSheet);\n}\n/**\n * Creates a `SafeStyleSheet` value by concatenating multiple `SafeStyleSheet`s.\n */\nexport function concatStyleSheets(sheets) {\n  return createStyleSheet(sheets.map(unwrapStyleSheet).join(''));\n}","map":{"version":3,"names":["assertIsTemplateObject","createStyleSheet","unwrapStyleSheet","safeStyleSheet","templateObj","process","env","NODE_ENV","styleSheet","test","Error","concatStyleSheets","sheets","map","join"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/safevalues/builders/style_sheet_builders.mjs"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\nimport { assertIsTemplateObject } from '../internals/string_literal';\nimport { createStyleSheet, unwrapStyleSheet } from '../internals/style_sheet_impl';\n/**\n * Creates a SafeStyleSheet object from a template literal (without any\n * embedded expressions).\n *\n * This function is a template literal tag function. It should be called with\n * a template literal that does not contain any expressions. For example,\n *                         safeStyleSheet`foo`;\n * The argument must not have any < or > characters in it. This is so that\n * SafeStyleSheet's contract is preserved, allowing the SafeStyleSheet to\n * correctly be interpreted as a sequence of CSS declarations and without\n * affecting the syntactic structure of any surrounding CSS and HTML.\n *\n * @param templateObj This contains the literal part of the template literal.\n */\nexport function safeStyleSheet(templateObj) {\n    if (process.env.NODE_ENV !== 'production') {\n        assertIsTemplateObject(templateObj, false, 'safeStyleSheet is a template literal tag ' +\n            'function that only accepts template literals without ' +\n            'expressions. For example, safeStyleSheet`foo`;');\n    }\n    const styleSheet = templateObj[0];\n    if (process.env.NODE_ENV !== 'production') {\n        if (/[<>]/.test(styleSheet)) {\n            throw new Error('Forbidden characters in styleSheet string: ' + styleSheet);\n        }\n    }\n    return createStyleSheet(styleSheet);\n}\n/**\n * Creates a `SafeStyleSheet` value by concatenating multiple `SafeStyleSheet`s.\n */\nexport function concatStyleSheets(sheets) {\n    return createStyleSheet(sheets.map(unwrapStyleSheet).join(''));\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,oBAAoB;AAC3B,SAASA,sBAAsB,QAAQ,6BAA6B;AACpE,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,+BAA+B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAc,CAACC,WAAW,EAAE;EACxC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvCP,sBAAsB,CAACI,WAAW,EAAE,KAAK,EAAE,2CAA2C,GAClF,uDAAuD,GACvD,gDAAgD,CAAC;EACzD;EACA,MAAMI,UAAU,GAAGJ,WAAW,CAAC,CAAC,CAAC;EACjC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvC,IAAI,MAAM,CAACE,IAAI,CAACD,UAAU,CAAC,EAAE;MACzB,MAAM,IAAIE,KAAK,CAAC,6CAA6C,GAAGF,UAAU,CAAC;IAC/E;EACJ;EACA,OAAOP,gBAAgB,CAACO,UAAU,CAAC;AACvC;AACA;AACA;AACA;AACA,OAAO,SAASG,iBAAiB,CAACC,MAAM,EAAE;EACtC,OAAOX,gBAAgB,CAACW,MAAM,CAACC,GAAG,CAACX,gBAAgB,CAAC,CAACY,IAAI,CAAC,EAAE,CAAC,CAAC;AAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}