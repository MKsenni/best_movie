{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\nimport { createAttributePrefix } from '../internals/attribute_impl';\nimport { assertIsTemplateObject } from '../internals/string_literal';\nimport { SECURITY_SENSITIVE_ATTRIBUTES } from './sensitive_attributes';\n/**\n * Creates a SafeAttributePrefix object from a template literal with no\n * interpolations for attributes that share a common prefix guaranteed to be not\n * security sensitive.\n *\n * The template literal is a prefix that makes it obvious this attribute is not\n * security sensitive. If it doesn't, this function will throw.\n */\nexport function safeAttrPrefix(templ) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertIsTemplateObject(templ, true, 'safeAttr is a template literal tag function ' + 'and should be called using the tagged template syntax. ' + 'For example, safeAttr`foo`;');\n  }\n  const attrPrefix = templ[0].toLowerCase();\n  if (process.env.NODE_ENV !== 'production') {\n    if (attrPrefix.indexOf('on') === 0 || 'on'.indexOf(attrPrefix) === 0) {\n      throw new Error(`Prefix '${templ[0]}' does not guarantee the attribute ` + `to be safe as it is also a prefix for event handler attributes` + `Please use 'addEventListener' to set event handlers.`);\n    }\n    SECURITY_SENSITIVE_ATTRIBUTES.forEach(sensitiveAttr => {\n      if (sensitiveAttr.indexOf(attrPrefix) === 0) {\n        throw new Error(`Prefix '${templ[0]}' does not guarantee the attribute ` + `to be safe as it is also a prefix for ` + `the security sensitive attribute '${sensitiveAttr}'. ` + `Please use native or safe DOM APIs to set the attribute.`);\n      }\n    });\n  }\n  return createAttributePrefix(attrPrefix);\n}","map":{"version":3,"names":["createAttributePrefix","assertIsTemplateObject","SECURITY_SENSITIVE_ATTRIBUTES","safeAttrPrefix","templ","process","env","NODE_ENV","attrPrefix","toLowerCase","indexOf","Error","forEach","sensitiveAttr"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/safevalues/builders/attribute_builders.mjs"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\nimport { createAttributePrefix } from '../internals/attribute_impl';\nimport { assertIsTemplateObject } from '../internals/string_literal';\nimport { SECURITY_SENSITIVE_ATTRIBUTES } from './sensitive_attributes';\n/**\n * Creates a SafeAttributePrefix object from a template literal with no\n * interpolations for attributes that share a common prefix guaranteed to be not\n * security sensitive.\n *\n * The template literal is a prefix that makes it obvious this attribute is not\n * security sensitive. If it doesn't, this function will throw.\n */\nexport function safeAttrPrefix(templ) {\n    if (process.env.NODE_ENV !== 'production') {\n        assertIsTemplateObject(templ, true, 'safeAttr is a template literal tag function ' +\n            'and should be called using the tagged template syntax. ' +\n            'For example, safeAttr`foo`;');\n    }\n    const attrPrefix = templ[0].toLowerCase();\n    if (process.env.NODE_ENV !== 'production') {\n        if (attrPrefix.indexOf('on') === 0 || 'on'.indexOf(attrPrefix) === 0) {\n            throw new Error(`Prefix '${templ[0]}' does not guarantee the attribute ` +\n                `to be safe as it is also a prefix for event handler attributes` +\n                `Please use 'addEventListener' to set event handlers.`);\n        }\n        SECURITY_SENSITIVE_ATTRIBUTES.forEach(sensitiveAttr => {\n            if (sensitiveAttr.indexOf(attrPrefix) === 0) {\n                throw new Error(`Prefix '${templ[0]}' does not guarantee the attribute ` +\n                    `to be safe as it is also a prefix for ` +\n                    `the security sensitive attribute '${sensitiveAttr}'. ` +\n                    `Please use native or safe DOM APIs to set the attribute.`);\n            }\n        });\n    }\n    return createAttributePrefix(attrPrefix);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,oBAAoB;AAC3B,SAASA,qBAAqB,QAAQ,6BAA6B;AACnE,SAASC,sBAAsB,QAAQ,6BAA6B;AACpE,SAASC,6BAA6B,QAAQ,wBAAwB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAc,CAACC,KAAK,EAAE;EAClC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvCN,sBAAsB,CAACG,KAAK,EAAE,IAAI,EAAE,8CAA8C,GAC9E,yDAAyD,GACzD,6BAA6B,CAAC;EACtC;EACA,MAAMI,UAAU,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACK,WAAW,EAAE;EACzC,IAAIJ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvC,IAAIC,UAAU,CAACE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAACA,OAAO,CAACF,UAAU,CAAC,KAAK,CAAC,EAAE;MAClE,MAAM,IAAIG,KAAK,CAAE,WAAUP,KAAK,CAAC,CAAC,CAAE,qCAAoC,GACnE,gEAA+D,GAC/D,sDAAqD,CAAC;IAC/D;IACAF,6BAA6B,CAACU,OAAO,CAACC,aAAa,IAAI;MACnD,IAAIA,aAAa,CAACH,OAAO,CAACF,UAAU,CAAC,KAAK,CAAC,EAAE;QACzC,MAAM,IAAIG,KAAK,CAAE,WAAUP,KAAK,CAAC,CAAC,CAAE,qCAAoC,GACnE,wCAAuC,GACvC,qCAAoCS,aAAc,KAAI,GACtD,0DAAyD,CAAC;MACnE;IACJ,CAAC,CAAC;EACN;EACA,OAAOb,qBAAqB,CAACQ,UAAU,CAAC;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}