{"ast":null,"code":"import _defineProperty from \"C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\n/* g3_import_pure from './pure' */\nimport { ensureTokenIsValid, secretToken } from './secrets';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types';\n/**\n * Runtime implementation of `TrustedScript` in browswers that don't support it.\n * script element.\n */\nclass ScriptImpl {\n  constructor(script, token) {\n    _defineProperty(this, \"privateDoNotAccessOrElseWrappedScript\", void 0);\n    if (process.env.NODE_ENV !== 'production') {\n      ensureTokenIsValid(token);\n    }\n    this.privateDoNotAccessOrElseWrappedScript = script;\n  }\n  toString() {\n    return this.privateDoNotAccessOrElseWrappedScript.toString();\n  }\n}\nfunction createScriptInternal(script, trusted) {\n  return trusted ?? new ScriptImpl(script, secretToken);\n}\nconst GlobalTrustedScript = typeof window !== undefined ? window.TrustedScript : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const SafeScript = GlobalTrustedScript ?? ScriptImpl;\n/**\n * Builds a new `SafeScript` from the given string, without enforcing\n * safety guarantees. It may cause side effects by creating a Trusted Types\n * policy. This shouldn't be exposed to application developers, and must only be\n * used as a step towards safe builders or safe constants.\n */\nexport function createScript(script) {\n  /** @noinline */\n  const noinlineScript = script;\n  return createScriptInternal(noinlineScript, getTrustedTypesPolicy()?.createScript(noinlineScript));\n}\n/**\n * An empty `SafeScript` constant.\n * Unlike the functions above, using this will not create a policy.\n */\nexport const EMPTY_SCRIPT = /* #__PURE__ */(() => createScriptInternal('', getTrustedTypes()?.emptyScript))();\n/**\n * Checks if the given value is a `SafeScript` instance.\n */\nexport function isScript(value) {\n  return value instanceof SafeScript;\n}\n/**\n * Returns the value of the passed `SafeScript` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedScript` or a string if Trusted Types are disabled.\n */\nexport function unwrapScript(value) {\n  if (getTrustedTypes()?.isScript(value)) {\n    return value;\n  } else if (value instanceof ScriptImpl) {\n    return value.privateDoNotAccessOrElseWrappedScript;\n  } else {\n    let message = '';\n    if (process.env.NODE_ENV !== 'production') {\n      message = 'Unexpected type when unwrapping SafeScript';\n    }\n    throw new Error(message);\n  }\n}","map":{"version":3,"names":["ensureTokenIsValid","secretToken","getTrustedTypes","getTrustedTypesPolicy","ScriptImpl","constructor","script","token","process","env","NODE_ENV","privateDoNotAccessOrElseWrappedScript","toString","createScriptInternal","trusted","GlobalTrustedScript","window","undefined","TrustedScript","SafeScript","createScript","noinlineScript","EMPTY_SCRIPT","emptyScript","isScript","value","unwrapScript","message","Error"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/safevalues/internals/script_impl.mjs"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev';\n/* g3_import_pure from './pure' */\nimport { ensureTokenIsValid, secretToken } from './secrets';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types';\n/**\n * Runtime implementation of `TrustedScript` in browswers that don't support it.\n * script element.\n */\nclass ScriptImpl {\n    privateDoNotAccessOrElseWrappedScript;\n    constructor(script, token) {\n        if (process.env.NODE_ENV !== 'production') {\n            ensureTokenIsValid(token);\n        }\n        this.privateDoNotAccessOrElseWrappedScript = script;\n    }\n    toString() {\n        return this.privateDoNotAccessOrElseWrappedScript.toString();\n    }\n}\nfunction createScriptInternal(script, trusted) {\n    return (trusted ?? new ScriptImpl(script, secretToken));\n}\nconst GlobalTrustedScript = (typeof window !== undefined) ? window.TrustedScript : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const SafeScript = (GlobalTrustedScript ?? ScriptImpl);\n/**\n * Builds a new `SafeScript` from the given string, without enforcing\n * safety guarantees. It may cause side effects by creating a Trusted Types\n * policy. This shouldn't be exposed to application developers, and must only be\n * used as a step towards safe builders or safe constants.\n */\nexport function createScript(script) {\n    /** @noinline */\n    const noinlineScript = script;\n    return createScriptInternal(noinlineScript, getTrustedTypesPolicy()?.createScript(noinlineScript));\n}\n/**\n * An empty `SafeScript` constant.\n * Unlike the functions above, using this will not create a policy.\n */\nexport const EMPTY_SCRIPT = \n/* #__PURE__ */ (() => createScriptInternal('', getTrustedTypes()?.emptyScript))();\n/**\n * Checks if the given value is a `SafeScript` instance.\n */\nexport function isScript(value) {\n    return value instanceof SafeScript;\n}\n/**\n * Returns the value of the passed `SafeScript` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedScript` or a string if Trusted Types are disabled.\n */\nexport function unwrapScript(value) {\n    if (getTrustedTypes()?.isScript(value)) {\n        return value;\n    }\n    else if (value instanceof ScriptImpl) {\n        return value.privateDoNotAccessOrElseWrappedScript;\n    }\n    else {\n        let message = '';\n        if (process.env.NODE_ENV !== 'production') {\n            message = 'Unexpected type when unwrapping SafeScript';\n        }\n        throw new Error(message);\n    }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,OAAO,oBAAoB;AAC3B;AACA,SAASA,kBAAkB,EAAEC,WAAW,QAAQ,WAAW;AAC3D,SAASC,eAAe,EAAEC,qBAAqB,QAAQ,iBAAiB;AACxE;AACA;AACA;AACA;AACA,MAAMC,UAAU,CAAC;EAEbC,WAAW,CAACC,MAAM,EAAEC,KAAK,EAAE;IAAA;IACvB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCV,kBAAkB,CAACO,KAAK,CAAC;IAC7B;IACA,IAAI,CAACI,qCAAqC,GAAGL,MAAM;EACvD;EACAM,QAAQ,GAAG;IACP,OAAO,IAAI,CAACD,qCAAqC,CAACC,QAAQ,EAAE;EAChE;AACJ;AACA,SAASC,oBAAoB,CAACP,MAAM,EAAEQ,OAAO,EAAE;EAC3C,OAAQA,OAAO,IAAI,IAAIV,UAAU,CAACE,MAAM,EAAEL,WAAW,CAAC;AAC1D;AACA,MAAMc,mBAAmB,GAAI,OAAOC,MAAM,KAAKC,SAAS,GAAID,MAAM,CAACE,aAAa,GAAGD,SAAS;AAC5F;AACA;AACA;AACA,OAAO,MAAME,UAAU,GAAIJ,mBAAmB,IAAIX,UAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASgB,YAAY,CAACd,MAAM,EAAE;EACjC;EACA,MAAMe,cAAc,GAAGf,MAAM;EAC7B,OAAOO,oBAAoB,CAACQ,cAAc,EAAElB,qBAAqB,EAAE,EAAEiB,YAAY,CAACC,cAAc,CAAC,CAAC;AACtG;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GACzB,eAAgB,CAAC,MAAMT,oBAAoB,CAAC,EAAE,EAAEX,eAAe,EAAE,EAAEqB,WAAW,CAAC,GAAG;AAClF;AACA;AACA;AACA,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAE;EAC5B,OAAOA,KAAK,YAAYN,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASO,YAAY,CAACD,KAAK,EAAE;EAChC,IAAIvB,eAAe,EAAE,EAAEsB,QAAQ,CAACC,KAAK,CAAC,EAAE;IACpC,OAAOA,KAAK;EAChB,CAAC,MACI,IAAIA,KAAK,YAAYrB,UAAU,EAAE;IAClC,OAAOqB,KAAK,CAACd,qCAAqC;EACtD,CAAC,MACI;IACD,IAAIgB,OAAO,GAAG,EAAE;IAChB,IAAInB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCiB,OAAO,GAAG,4CAA4C;IAC1D;IACA,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC;EAC5B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}