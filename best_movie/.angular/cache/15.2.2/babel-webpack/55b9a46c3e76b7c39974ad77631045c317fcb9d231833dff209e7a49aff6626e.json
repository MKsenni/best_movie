{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\n/** MDC Icon Button Toggle Foundation */\nvar MDCIconButtonToggleFoundation = /** @class */function (_super) {\n  __extends(MDCIconButtonToggleFoundation, _super);\n  function MDCIconButtonToggleFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCIconButtonToggleFoundation.defaultAdapter), adapter)) || this;\n    /**\n     * Whether the icon button has an aria label that changes depending on\n     * toggled state.\n     */\n    _this.hasToggledAriaLabel = false;\n    return _this;\n  }\n  Object.defineProperty(MDCIconButtonToggleFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCIconButtonToggleFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCIconButtonToggleFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        hasClass: function () {\n          return false;\n        },\n        notifyChange: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        getAttr: function () {\n          return null;\n        },\n        setAttr: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MDCIconButtonToggleFoundation.prototype.init = function () {\n    var ariaLabelOn = this.adapter.getAttr(strings.DATA_ARIA_LABEL_ON);\n    var ariaLabelOff = this.adapter.getAttr(strings.DATA_ARIA_LABEL_OFF);\n    if (ariaLabelOn && ariaLabelOff) {\n      if (this.adapter.getAttr(strings.ARIA_PRESSED) !== null) {\n        throw new Error('MDCIconButtonToggleFoundation: Button should not set ' + '`aria-pressed` if it has a toggled aria label.');\n      }\n      this.hasToggledAriaLabel = true;\n    } else {\n      this.adapter.setAttr(strings.ARIA_PRESSED, String(this.isOn()));\n    }\n  };\n  MDCIconButtonToggleFoundation.prototype.handleClick = function () {\n    this.toggle();\n    this.adapter.notifyChange({\n      isOn: this.isOn()\n    });\n  };\n  MDCIconButtonToggleFoundation.prototype.isOn = function () {\n    return this.adapter.hasClass(cssClasses.ICON_BUTTON_ON);\n  };\n  MDCIconButtonToggleFoundation.prototype.toggle = function (isOn) {\n    if (isOn === void 0) {\n      isOn = !this.isOn();\n    }\n    // Toggle UI based on state.\n    if (isOn) {\n      this.adapter.addClass(cssClasses.ICON_BUTTON_ON);\n    } else {\n      this.adapter.removeClass(cssClasses.ICON_BUTTON_ON);\n    }\n    // Toggle aria attributes based on state.\n    if (this.hasToggledAriaLabel) {\n      var ariaLabel = isOn ? this.adapter.getAttr(strings.DATA_ARIA_LABEL_ON) : this.adapter.getAttr(strings.DATA_ARIA_LABEL_OFF);\n      this.adapter.setAttr(strings.ARIA_LABEL, ariaLabel || '');\n    } else {\n      this.adapter.setAttr(strings.ARIA_PRESSED, \"\" + isOn);\n    }\n  };\n  return MDCIconButtonToggleFoundation;\n}(MDCFoundation);\nexport { MDCIconButtonToggleFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCIconButtonToggleFoundation;","map":{"version":3,"names":["__assign","__extends","MDCFoundation","cssClasses","strings","MDCIconButtonToggleFoundation","_super","adapter","_this","call","defaultAdapter","hasToggledAriaLabel","Object","defineProperty","get","enumerable","configurable","addClass","undefined","hasClass","notifyChange","removeClass","getAttr","setAttr","prototype","init","ariaLabelOn","DATA_ARIA_LABEL_ON","ariaLabelOff","DATA_ARIA_LABEL_OFF","ARIA_PRESSED","Error","String","isOn","handleClick","toggle","ICON_BUTTON_ON","ariaLabel","ARIA_LABEL"],"sources":["C:/Users/Acer/Desktop/best_movie/best_movie/node_modules/@material/icon-button/foundation.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\n/** MDC Icon Button Toggle Foundation */\nvar MDCIconButtonToggleFoundation = /** @class */ (function (_super) {\n    __extends(MDCIconButtonToggleFoundation, _super);\n    function MDCIconButtonToggleFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCIconButtonToggleFoundation.defaultAdapter), adapter)) || this;\n        /**\n         * Whether the icon button has an aria label that changes depending on\n         * toggled state.\n         */\n        _this.hasToggledAriaLabel = false;\n        return _this;\n    }\n    Object.defineProperty(MDCIconButtonToggleFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCIconButtonToggleFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCIconButtonToggleFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                notifyChange: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                getAttr: function () { return null; },\n                setAttr: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCIconButtonToggleFoundation.prototype.init = function () {\n        var ariaLabelOn = this.adapter.getAttr(strings.DATA_ARIA_LABEL_ON);\n        var ariaLabelOff = this.adapter.getAttr(strings.DATA_ARIA_LABEL_OFF);\n        if (ariaLabelOn && ariaLabelOff) {\n            if (this.adapter.getAttr(strings.ARIA_PRESSED) !== null) {\n                throw new Error('MDCIconButtonToggleFoundation: Button should not set ' +\n                    '`aria-pressed` if it has a toggled aria label.');\n            }\n            this.hasToggledAriaLabel = true;\n        }\n        else {\n            this.adapter.setAttr(strings.ARIA_PRESSED, String(this.isOn()));\n        }\n    };\n    MDCIconButtonToggleFoundation.prototype.handleClick = function () {\n        this.toggle();\n        this.adapter.notifyChange({ isOn: this.isOn() });\n    };\n    MDCIconButtonToggleFoundation.prototype.isOn = function () {\n        return this.adapter.hasClass(cssClasses.ICON_BUTTON_ON);\n    };\n    MDCIconButtonToggleFoundation.prototype.toggle = function (isOn) {\n        if (isOn === void 0) { isOn = !this.isOn(); }\n        // Toggle UI based on state.\n        if (isOn) {\n            this.adapter.addClass(cssClasses.ICON_BUTTON_ON);\n        }\n        else {\n            this.adapter.removeClass(cssClasses.ICON_BUTTON_ON);\n        }\n        // Toggle aria attributes based on state.\n        if (this.hasToggledAriaLabel) {\n            var ariaLabel = isOn ?\n                this.adapter.getAttr(strings.DATA_ARIA_LABEL_ON) :\n                this.adapter.getAttr(strings.DATA_ARIA_LABEL_OFF);\n            this.adapter.setAttr(strings.ARIA_LABEL, ariaLabel || '');\n        }\n        else {\n            this.adapter.setAttr(strings.ARIA_PRESSED, \"\" + isOn);\n        }\n    };\n    return MDCIconButtonToggleFoundation;\n}(MDCFoundation));\nexport { MDCIconButtonToggleFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCIconButtonToggleFoundation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}